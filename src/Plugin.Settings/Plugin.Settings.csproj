<Project Sdk="MSBuild.Sdk.Extras/3.0.44">
	<PropertyGroup>			
		<TargetFrameworks>netstandard2.0;MonoAndroid10.0;Xamarin.iOS10;Xamarin.TVOS10;Xamarin.Mac20;net6.0-android;net6.0-ios;net6.0-maccatalyst;net6.0-tvos;net6.0-macos;net6.0;net45;Tizen40</TargetFrameworks>
		<TargetFrameworks Condition=" '$(OS)' == 'Windows_NT' ">$(TargetFrameworks);uap10.0.19041;net6.0-windows10.0.19041;</TargetFrameworks>
		<AssemblyName>Plugin.Settings</AssemblyName>
		<RootNamespace>Plugin.Settings</RootNamespace>
		<Product>$(AssemblyName) ($(TargetFramework))</Product>
		<AssemblyVersion>1.0.0.0</AssemblyVersion>
		<AssemblyFileVersion>1.0.0.0</AssemblyFileVersion>
		<Version>1.0.0.0</Version>
		<Authors>James Montemagno</Authors>
		<PackageId>Xam.Plugins.Settings</PackageId>
		<PackOnBuild>true</PackOnBuild>
		<PackageIconUrl>https://raw.githubusercontent.com/jamesmontemagno/SettingsPlugin/master/art/icon.png</PackageIconUrl>
		<PackageLicenseUrl>https://github.com/jamesmontemagno/SettingsPlugin/blob/master/LICENSE</PackageLicenseUrl>
		<Owners>JamesMontemagno</Owners>
		<PackageProjectUrl>https://github.com/jamesmontemagno/SettingsPlugin</PackageProjectUrl>
		<Summary>Cross-platform settings for .NET 6, .NET MAUI, Xamarin.iOS, Xamarin.Android, Xamarin.Mac, Xamarin.Forms, and Windows.</Summary>
		<PackageTags>xamarin, xamarin.forms, plugin, plugin for xamarin, settings, preferences, settings plugin, ios, android, uwp, tizen</PackageTags>
		<Title>Settings Plugin for .NET 6, .NET MAUI, Xamarin, and Windows</Title>
		<Description>
			Settings Plugin  .NET 6, .NET MAUI, Xamarin and Windows provides a consistent, cross platform settings/preferences plugin.

			This makes it easier to create cross-platform .NET apps and have cross platform settings.
			Manage and use all settings from one PCL/NetStandard library and save natively on each platform.

			**This plugin stores settings natively on each platform and does NOT save them to Json.
			This allows you to use native functionality such as PreferenceActivity on Android.

			Support for: Int, Int64, Double, String, DateTime, Bool, Float, Decimal, Guid

			You can always serialize and deserialize a string out if needed.**
		</Description>
		<Copyright>Copyright 2018</Copyright>
		<RepositoryUrl>https://github.com/jamesmontemagno/SettingsPlugin</RepositoryUrl>
		<PackageReleaseNotes>See: https://github.com/jamesmontemagno/SettingsPlugin </PackageReleaseNotes>

		<NeutralLanguage>en</NeutralLanguage>
		<LangVersion>default</LangVersion>
		<EnableDefaultCompileItems>false</EnableDefaultCompileItems>


		<GenerateDocumentationFile Condition=" '$(Configuration)' == 'Release' ">true</GenerateDocumentationFile>

		<DefineConstants>$(DefineConstants);</DefineConstants>

		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
	</PropertyGroup>

	<!-- platform version number information -->
	<PropertyGroup>
		<SupportedOSPlatformVersion Condition="$(TargetFramework.Contains('-ios'))">10.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$(TargetFramework.Contains('-tvos'))">10.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$(TargetFramework.Contains('-maccatalyst'))">13.1</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$(TargetFramework.Contains('-macos'))">10.14</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$(TargetFramework.Contains('-android'))">21.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$(TargetFramework.Contains('-windows10'))">10.0.17763.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion Condition="$(TargetFramework.Contains('-windows10'))">10.0.17763.0</TargetPlatformMinVersion>
	</PropertyGroup>

	<PropertyGroup Condition=" $(TargetFramework.StartsWith('uap10.0')) ">
		<TargetPlatformMinVersion>10.0.17763.0</TargetPlatformMinVersion>
	</PropertyGroup>
	
	<PropertyGroup Condition=" '$(Configuration)'=='Debug' ">
		<DebugType>full</DebugType>
		<DebugSymbols>true</DebugSymbols>
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Configuration)'=='Release' And '$(OS)' == 'Windows_NT' ">
		<DebugType>pdbonly</DebugType>
		<!-- sourcelink: Declare that the Repository URL can be published to NuSpec -->
		<PublishRepositoryUrl>true</PublishRepositoryUrl>
		<!-- sourcelink: Embed source files that are not tracked by the source control manager to the PDB -->
		<EmbedUntrackedSources>true</EmbedUntrackedSources>
		<!-- sourcelink: Include PDB in the built .nupkg -->
		<AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
	</PropertyGroup>
	<ItemGroup Condition=" '$(Configuration)'=='Release' And '$(OS)' == 'Windows_NT' ">
		<PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1" PrivateAssets="All" />
	</ItemGroup>

	<ItemGroup>
		<None Include="..\..\nuget\readme.txt" PackagePath="readme.txt" Pack="true" />
		<Compile Include="**\*.shared.cs" />
	</ItemGroup>

	<ItemGroup Condition=" $(TargetFramework.StartsWith('netstandard')) ">
	</ItemGroup>

	<ItemGroup Condition=" $(TargetFramework.StartsWith('uap10.0')) ">
		<Compile Include="**\*.uwp.cs" />
	</ItemGroup>

	<ItemGroup Condition=" $(TargetFramework.Contains('-windows')) ">
		<Compile Include="**\*.uwp.cs" />
	</ItemGroup>

	<ItemGroup Condition=" $(TargetFramework.StartsWith('MonoAndroid')) ">
		<Compile Include="**\*.android.cs" />
	</ItemGroup>

	<ItemGroup Condition=" $(TargetFramework.Contains('-android')) ">
		<Compile Include="**\*.android.cs" />
	</ItemGroup>

	<ItemGroup Condition=" $(TargetFramework.StartsWith('Xamarin.iOS')) ">
		<Compile Include="**\*.apple.cs" />
	</ItemGroup>

	<ItemGroup Condition=" $(TargetFramework.Contains('-ios')) ">
		<Compile Include="**\*.apple.cs" />
	</ItemGroup>


	<ItemGroup Condition=" $(TargetFramework.StartsWith('Xamarin.TVOS')) ">
		<Compile Include="**\*.apple.cs" />
	</ItemGroup>

	<ItemGroup Condition=" $(TargetFramework.Contains('-tvos')) ">
		<Compile Include="**\*.apple.cs" />
	</ItemGroup>

	<ItemGroup Condition=" $(TargetFramework.StartsWith('Xamarin.WatchOS')) ">
		<Compile Include="**\*.apple.cs" />
	</ItemGroup>

	<ItemGroup Condition=" $(TargetFramework.StartsWith('Xamarin.Mac')) ">
		<Compile Include="**\*.apple.cs" />
	</ItemGroup>

	<ItemGroup Condition=" $(TargetFramework.Contains('-mac')) ">
		<Compile Include="**\*.apple.cs" />
	</ItemGroup>

	<ItemGroup Condition=" $(TargetFramework.StartsWith('net45')) ">
		<Compile Include="**\*.dotnet.cs" />
	</ItemGroup>

	<ItemGroup Condition=" $(TargetFramework.Equals('net6.0')) ">
		<Compile Include="**\*.dotnet.cs" />
	</ItemGroup>

	<ItemGroup Condition=" $(TargetFramework.StartsWith('Tizen')) ">
		<Compile Include="**\*.tizen.cs" />
	</ItemGroup>
</Project>
